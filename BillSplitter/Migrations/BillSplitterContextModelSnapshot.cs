// <auto-generated />
using BillSplitter.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BillSplitter.Migrations
{
    [DbContext(typeof(BillSplitterContext))]
    partial class BillSplitterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("BillSplitter.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BillCollectionId");

                    b.Property<int?>("PaidByPersonId");

                    b.Property<int?>("SupplierId");

                    b.Property<double>("TotalAmount");

                    b.HasKey("BillId");

                    b.HasIndex("BillCollectionId");

                    b.HasIndex("PaidByPersonId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("BillSplitter.Models.BillCollection", b =>
                {
                    b.Property<int>("BillCollectionId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("Date");

                    b.HasKey("BillCollectionId");

                    b.ToTable("BillCollections");
                });

            modelBuilder.Entity("BillSplitter.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("BillSplitter.Models.Split", b =>
                {
                    b.Property<int>("BillId");

                    b.Property<int>("PersonId");

                    b.Property<double?>("SplitAmount");

                    b.Property<double?>("SplitPercent");

                    b.HasKey("BillId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("Splits");
                });

            modelBuilder.Entity("BillSplitter.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("BillSplitter.Models.Bill", b =>
                {
                    b.HasOne("BillSplitter.Models.BillCollection")
                        .WithMany("Bills")
                        .HasForeignKey("BillCollectionId");

                    b.HasOne("BillSplitter.Models.Person", "PaidBy")
                        .WithMany()
                        .HasForeignKey("PaidByPersonId");

                    b.HasOne("BillSplitter.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("BillSplitter.Models.Split", b =>
                {
                    b.HasOne("BillSplitter.Models.Bill", "Bill")
                        .WithMany("SplitWith")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BillSplitter.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
